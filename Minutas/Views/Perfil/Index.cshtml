<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Outlock Base</title>
    <link rel="stylesheet" href="~/Modifi/style.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
</head>
<body>
    <header>
        <div id="titulo">
            <button class="menu">
                <img id="imgMenu" src="~/Modifi/588a64e0d06f6719692a2d10.png" alt="" srcset="">
            </button>
            <img src="~/Modifi/logotec (weld).png">
            <div>
                <h1>MINUTAS</h1>
                <p>Mario Esteban Longares Cervantes</p>
            </div>
        </div>
        <div id="seccion">
            <input type="search" placeholder="">
            <i id="buscar" class="material-icons">search</i>
        </div>
    </header>
    <div class="content">
        <aside class="sidebar">
            <a id="apartado-minutas" href="/Home">Minutas</a>
            <a id="apartado-perfil" href="/Perfil">Perfil</a>
            <a id="apartado-sesion" href="/login.html">Cerrar Sesión</a>
        </aside>
        <main>
            <form id="perfil" data-section="perfil">
                <h3><span>#4455 </span>EMPLEADO <a id="btnEditarPerfil" class="material-icons">edit</a></h3>
                <div class="campos-container">
                    <div class="datos">
                        <label>Nombre</label>
                        <label>Correo Electrónico</label>
                        <label>Fecha de Nacimiento</label>

                    </div>
                    <div class="editables" data-section="perfil">
                        <!-- Nombre -->
                        <div>
                            <input id="perfilNombre" name="Nombre" type="text" value="@Model.Nombre" disabled />
                            <button data-input="perfilNombre" class="btnEditarPerfil editarbtns" title="Editar">🖉</button>
                            <button type="button" class="GuardarPerfil editarbtns">✔️</button>
                            <button type="button" class="CancelarPerfil editarbtns">❌</button>
                        </div>
                        <!-- Correo -->
                        <div>
                            <input id="perfilCorreo" name="Correo" type="email" value="@Model.Correo" disabled />
                            <button data-input="perfilCorreo" class="btnEditarPerfil editarbtns" title="Editar">🖉</button>
                            <button type="button" class="GuardarPerfil editarbtns">✔️</button>
                            <button type="button" class="CancelarPerfil editarbtns">❌</button>
                        </div>
                        <!-- Fecha de Nacimiento: solo lectura, sin botones -->
                        <div>
                            <input id="perfilNacimiento" name="FechaNacimiento" type="date" value="@Model.FechaNacimiento.ToString("yyyy-MM-dd")" disabled />
                        </div>


                    </div>

                </div>
            </form>

        </main>
    </div>
    <script>
          const menu = document.querySelector('.menu');
          const sidebar = document.querySelector('.sidebar');
          const header =document.querySelector("header");
          const modEditPerfil =  document.querySelector("#modalEditarPerfil");

            const formPerfil = document.getElementById("perfil");
            if (formPerfil) {
                formPerfil.addEventListener("submit", function () {
                    this.querySelectorAll("input, select").forEach(input => {
                        input.disabled = false; // Así todos los valores se envían
                    });

                // Editar campos del perfil
            inicializarEditables('[data-section="perfil"]');
            inicializarEditables('[data-section="correo"]');

            function inicializarEditables(sectionSelector) {
                const seccion = document.querySelector(sectionSelector);
                if (!seccion) return;

            const botonesEditar = seccion.querySelectorAll(".btnEditarPerfil");

            botonesEditar.forEach(btn => {
                btn.addEventListener("click", (e) => {
                    e.preventDefault();
                    const campoId = btn.dataset.input;
                    const campo = document.getElementById(campoId);
                    if (!campo) return;
                              // Guardar el valor original solo si no se ha guardado antes
                        campo.dataset.original = campo.value;

                    // Desactivar todos los inputs/selects
                    seccion.querySelectorAll("input, select").forEach(input => {
                        input.disabled = true;
                        input.classList.remove("active");
                    });

                    // Ocultar todos los botones
                    seccion.querySelectorAll(".GuardarPerfil, .CancelarPerfil").forEach(b => b.style.display = "none");
                    seccion.querySelectorAll(".btnEditarPerfil").forEach(b => b.style.display = "inline");

                    // Activar solo el campo correspondiente
                    campo.disabled = false;
                    campo.classList.add("active");
                    campo.focus();

                    // Mostrar los botones de acción para ese campo
                    const divPadre = btn.closest("div");
                    if (divPadre) {
                        btn.style.display = "none";
                        const btnGuardar = divPadre.querySelector(".GuardarPerfil");
                        const btnCancelar = divPadre.querySelector(".CancelarPerfil");
                        if (btnGuardar) btnGuardar.style.display = "inline";
                        if (btnCancelar) btnCancelar.style.display = "inline";
                    }
                });
            });
        }

          document.querySelector("#buscar").addEventListener("click",function (){
              console.log("sdfgh");
              header.classList.toggle("buscar");
          })
          //Sidebar
          menu.addEventListener('click', () => {
              sidebar.classList.toggle('active');
          });


          const agregar = document.querySelector("#agregar");
          sidebar.addEventListener("click", function(e){
              if(e.target.tagName == "I"){
                  agregar.style.visibility="visible";
              }

          });

          //Filtros
          let lasActiveCategory = null;
          const categorias=document.querySelector('.filtros div');
          categorias.addEventListener('click',function(e){
              if(lasActiveCategory){
                  lasActiveCategory.classList.remove('active');
              }
              lasActiveCategory=e.target;
              e.target.classList.toggle('active');
          });

          //CambioEnMovilDeminuta
          // const Lista=document.querySelector('.minutas-list');
          // const minutasContent=document.querySelector('.minuta-content');
          // const minutas=document.querySelector('.minutas');

          // minutas.addEventListener('click',(e)=>{
          //     if(!e.target.classList.contains('filtros') && !e.target.parentElement.parentElement.classList.contains('filtros')  && !e.target.parentElement.classList.contains('filtros')){

          //         minutasContent.classList.toggle('active');
          //         console.log(e.target.parentElement.classList.contains('filtros'));
          //         Lista.classList.toggle('inactive');
          //     }
          // });




          history.pushState(null, "", location.href);

          window.addEventListener("popstate", function () {
              Lista.classList.toggle('inactive');
          console.log("Intento de salir con botón de retroceso");
          history.pushState(null, "", location.href); // Reagrega el estado para evitar la salida
          });



          document.addEventListener("click", function (event) {
        //      if (!minutasContent.contains(event.target) && !minutas.contains(event.target)) {
          //        minutasContent.classList.remove('active');
            //      minutas.classList.remove('inactive');
              //}
              if (!sidebar.contains(event.target ) && !menu.contains(event.target)) {
                  if (sidebar.classList.contains('active')) {
                      sidebar.classList.remove('active');
              console.log('click en sidebar');

                  }
              }
          });
                   document.querySelectorAll('.GuardarPerfil').forEach(btn => {
                    btn.addEventListener('click', function() {
                        // Habilitar todos los inputs para enviar
                        const form = this.closest('form');
                        form.querySelectorAll('input, select').forEach(i => i.disabled = false);
                        form.submit();
                    });
                });




        });

                         function cerrarSesion() {
                        // Crea dinámicamente un formulario para enviar POST a /Account/Logout
                        const form = document.createElement('form');
                        form.method = 'POST';
                        form.action = '/Account/Logout';

                        // Agrega token antifalsificación
                        const token = document.querySelector('meta[name="RequestVerificationToken"]')?.content;
                        if (token) {
                            const input = document.createElement('input');
                            input.type = 'hidden';
                            input.name = '__RequestVerificationToken';
                            input.value = token;
                            form.appendChild(input);
                        }

                        document.body.appendChild(form);
                        form.submit();
                    }

                            document.querySelectorAll('.CancelarPerfil').forEach(btn => {
                    btn.addEventListener('click', function () {
                        const div = btn.closest('div');
                        const input = div.querySelector('input, select');
                        if (!input) return;

                        // Restaurar valor original si existe
                        if (input.dataset.original !== undefined) {
                            input.value = input.dataset.original;
                        }

                        input.disabled = true;
                        input.classList.remove('active');

                        btn.style.display = 'none';
                        const btnGuardar = div.querySelector('.GuardarPerfil');
                        const btnEditar = div.querySelector('.btnEditarPerfil');
                        if (btnGuardar) btnGuardar.style.display = 'none';
                        if (btnEditar) btnEditar.style.display = 'inline';
                    });
                });


    </script>
</body>
</html>