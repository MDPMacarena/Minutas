 @model IEnumerable<MinutasManage.Models.Usuarios>
@Html.AntiForgeryToken()

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Outlock Base</title>
    <link rel="stylesheet" href="~/Modifi/style.css" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
</head>
<body>
    <header>
        <div id="titulo">
            <button class="menu">
                <img id="imgMenu" src="~/Modifi/588a64e0d06f6719692a2d10.png" alt="">
            </button>
            <img src="~/Modifi/logotec (weld).png">
            <div>
                <h1>MINUTAS</h1>
                <p>Luis Carlos Esteban Longares Vidal</p>
            </div>
        </div>
        <div id="seccion">
            <input type="search" placeholder="buscar..">
            <i id="buscar" class="material-icons">search</i>
            <i id="crearEmpleadoBtn" class="material-icons">person_add</i>
        </div>
    </header>

    <div class="content">
        <aside class="sidebar">
            <a href="/Admin/Home">Minutas</a>
            <a href="/Admin/Empleado">Empleados</a>
            <a href="/Admin/Departamento">Departamentos</a>
            <a href="/Admin/Configuracion">Configuracion</a>
            <a href="/Admin/Perfil">Perfil</a>
            <a id="apartado-sesion" href="/Admin/login.html">Cerrar Sesión</a>
        </aside>

        <main>

            @if (TempData["ErrorAgregar"] != null)
            {
                <script>
                    document.addEventListener('DOMContentLoaded', function () {
                        mostrarToast('@TempData["ErrorAgregar"]', 'error');
                        document.getElementById("modalCrearEmpleado").style.display = "block";
                    });
                </script>
            }

            @if (TempData["SuccessAgregar"] != null)
            {
                <div class="toast-msg success">
                    <span>@TempData["SuccessAgregar"]</span>
                    <button class="close-toast">&times;</button>
                </div>
            }
            @if (TempData["ErrorEditar"] != null)
            {
                <div class="toast-msg error">
                    <span>@TempData["ErrorEditar"]</span>
                    <button class="close-toast">&times;</button>
                </div>
            }
            @if (TempData["SuccessEditar"] != null)
            {
                <div class="toast-msg success">
                    <span>@TempData["SuccessEditar"]</span>
                    <button class="close-toast">&times;</button>
                </div>
            }
            @if (TempData["SuccessEliminar"] != null)
            {
                <div class="toast-msg success">
                    <span>@TempData["SuccessEliminar"]</span>
                    <button class="close-toast">&times;</button>
                </div>
            }

            <table id="tablaEmplea">
                <tr>
                    <th>Núm. Empleado</th>
                    <th>Nombre</th>
                    <th>Departamento</th>
                    <th></th>
                    <th></th>
                </tr>
                @foreach (var empleado in Model)
                {
                    <tr>
                        <td>@empleado.NumEmpleado</td>
                        <td>@empleado.Nombre</td>
                        <td>@empleado.IdDepartamentoNavigation?.Nombre</td>
                        <td class="eliminarEmp"
                            data-id="@empleado.Id"
                            data-nombre="@empleado.Nombre"
                            data-numero="@empleado.NumEmpleado">
                            🗑
                        </td>

                        <td class="editarEmp"
                            data-id="@empleado.Id"
                            data-nombre="@empleado.Nombre"
                            data-correo="@empleado.Correo"
                            data-numero="@empleado.NumEmpleado"
                            data-nac="@empleado.FechaNacimiento.ToString("yyyy-MM-dd")"
                            data-dep="@empleado.IdDepartamento">
                            🖉
                        </td>
                    </tr>
                }
            </table>

            <!-- Modal Crear Empleado -->
            <div id="modalCrearEmpleado" class="modal">
                <form method="post" action="/Admin/Empleado/Agregar">
                    <h3>Dar de alta empleados</h3>

                    <label>Nombre completo:</label>
                    <input name="Usuario.Nombre" type="text" placeholder="Escribir..." required
                           value="@TempData["Nombre"]" />

                    <label>Correo electrónico:</label>
                    <input name="Usuario.Correo" type="email" placeholder="Escribir..." required
                           value="@TempData["Correo"]" />

                    <label>Departamento:</label>
                    <select name="Usuario.IdDepartamento" required>
                        <option disabled @(TempData["Departamento"] == null ? "selected" : "")>Selecciona una opción</option>
                        @foreach (var dep in ViewBag.Departamentos)
                        {
                            var selected = TempData["Departamento"]?.ToString() == dep.Id.ToString() ? "selected" : "";
                            <option value="@dep.Id" @selected>@dep.Nombre</option>
                        }
                    </select>

                    <label>Número de empleado:</label>
                    <input name="Usuario.NumEmpleado" type="number" placeholder="Escribir..." required
                           value="@TempData["NumEmpleado"]" />

                    <label>Fecha de Nacimiento:</label>
                    <input name="Usuario.FechaNacimiento" type="date" required
                           value="@TempData["FechaNacimiento"]" />

                    <div class="buttons">
                        <input type="button" value="Cancelar" onclick="cerrarModal('modalCrearEmpleado');">
                        <input type="button" value="Confirmar" onclick="this.form.submit();">
                    </div>
                </form>
            </div>
            <!-- Modal Editar Empleado -->
            <div id="modalEditarEmpleado" class="modal active">
                <form method="post" action="/Admin/Empleado/Editar">
                    <h3>Editar empleado</h3>

                    <input type="hidden" name="Id" id="edit-id" />

                    <label>Nombre completo:</label>
                    <input name="Nombre" id="edit-nombre" type="text" required />

                    <label>Correo electrónico:</label>
                    <input readonly name="Correo" id="edit-correo" type="email" required />


                    <label>Departamento:</label>
                    <select name="IdDepartamento" id="edit-dep" required>
                        <option disabled>Selecciona una opción</option>
                        @foreach (var dep in ViewBag.Departamentos)
                        {
                            <option value="@dep.Id">@dep.Nombre</option>
                        }
                    </select>

                    <label>Número de empleado:</label>
                    <input readonly name="NumEmpleado" id="edit-num" type="text" required />

                    <label>Rol:</label>
                    <select name="IdRol" id="edit-rol" required>
                        <option disabled>Selecciona una opción</option>
                        @foreach (var rol in ViewBag.Roles)
                        {
                            <option value="@rol.Id">@rol.Nombre</option>
                        }
                    </select>

                    <label>Fecha de Nacimiento:</label>
                    <input name="FechaNacimiento" id="edit-nac" type="date" required />



                    <div class="buttons">
                        <input type="button" value="Cancelar" onclick="cerrarModal('modalEditarEmpleado');">


                        <input type="button" value="Confirmar" onclick="this.form.submit();">
                    </div>
                </form>
            </div>



        </main>
    </div>

    <script>
        // Sidebar y acciones de UI
        document.addEventListener('DOMContentLoaded', function () {
            const menu = document.querySelector('button');
            const sidebar = document.querySelector('.sidebar');
            const header = document.querySelector("header");

            if (menu && sidebar) {
                menu.addEventListener('click', () => {
                    sidebar.classList.toggle('active');
                });
            }

            const crearBtn = document.querySelector("#crearEmpleadoBtn");
            if (crearBtn) {
                crearBtn.addEventListener("click", function () {
                    const modal = document.querySelector("#modalCrearEmpleado");
                    if (modal) modal.style.display = "block";
                });
            }

            // Buscar (solo una vez)
            const buscarBtn = document.querySelector("#buscar");
            if (buscarBtn) {
                buscarBtn.addEventListener("click", function () {
                    header.classList.toggle("buscar");
                });
            }

            document.querySelectorAll('.eliminarEmp').forEach(btn => {
                btn.addEventListener('click', () => {
                    const id = btn.getAttribute('data-id');
                    const nombre = btn.getAttribute('data-nombre');
                    const numEmpleado = btn.getAttribute('data-numero');

                    const mensaje = `¿Deseas eliminar al usuario ${numEmpleado} - ${nombre}?`;
                    if (confirm(mensaje)) {
                        fetch(`/Admin/Empleado/EliminarConfirmado/${id}`, {
                            method: 'POST',
                            headers: {
                                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                            }
                        })
                        .then(response => {
                            if (!response.ok) throw new Error('Error en la respuesta del servidor');
                            return response.json();
                        })
                        .then(data => {
                            if (data.success) {
                                location.reload();
                            } else {
                                // Mostrar mensaje de error si es necesario
                                const toastError = document.createElement('div');
                                toastError.className = 'toast-msg error';
                                toastError.innerHTML = `
                                    <span>Error al eliminar el usuario</span>
                                    <button class="close-toast">&times;</button>
                                `;
                                document.querySelector('main').prepend(toastError);
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                        });
                    }
                });
            });

            // Editar empleado
            document.querySelectorAll('.editarEmp').forEach(btn => {
                btn.addEventListener('click', () => {
                    const id = btn.dataset.id;

                    fetch(`/Admin/Empleado/Editar/${id}`)
                        .then(res => res.json())
                        .then(data => {
                            document.getElementById("edit-id").value = data.id;
                            document.getElementById("edit-nombre").value = data.nombre;
                            document.getElementById("edit-correo").value = data.correo;
                            document.getElementById("edit-num").value = data.numEmpleado;
                            document.getElementById("edit-nac").value = data.fechaNacimiento.substring(0, 10);
                            document.getElementById("edit-dep").value = data.idDepartamento;
                            document.getElementById("edit-rol").value = data.idRol;

                            const modal = document.getElementById("modalEditarEmpleado");
                            modal.style.display = "block";
                            modal.classList.add("active");
                        });
                });
            });

            // Cierre de toast manual
            document.querySelectorAll('.close-toast').forEach(btn => {
                btn.addEventListener('click', () => {
                    btn.parentElement.remove();
                });
            });

            // Cierre de toast automático
            setTimeout(() => {
                const toast = document.querySelector('.toast-msg');
                if (toast) {
                    toast.style.transition = "opacity 0.5s ease-out";
                    toast.style.opacity = 0;
                    setTimeout(() => toast.remove(), 500);
                }
            }, 3000);

            // Filtros
            let lasActiveCategory = null;
            const categorias = document.querySelector('.filtros div');
            if (categorias) {
                categorias.addEventListener('click', (e) => {
                    if (lasActiveCategory) {
                        lasActiveCategory.classList.remove('active');
                    }
                    lasActiveCategory = e.target;
                    e.target.classList.toggle('active');
                });
            }

            // Cambio en móvil de minuta
            const minutas = document.querySelector('.minutas-list');
            const minutasContent = document.querySelector('.minuta-content');

            if (minutas && minutasContent) {
                minutas.addEventListener('click', (e) => {
                    if (!e.target.classList.contains('filtros')) {
                        minutasContent.classList.toggle('active');
                        console.log('click en minuta');
                        minutas.classList.toggle('inactive');
                    }
                });

                history.pushState(null, "", location.href);
                window.addEventListener("popstate", function () {
                    minutas.classList.toggle('inactive');
                    console.log("Intento de salir con botón de retroceso");
                    history.pushState(null, "", location.href); // Reagrega el estado
                });
            }

            // Cierre sidebar si clic fuera
            document.addEventListener("click", function (event) {
                if (!sidebar.contains(event.target) && !menu.contains(event.target)) {
                    if (sidebar.classList.contains('active')) {
                        sidebar.classList.remove('active');
                        console.log('click en sidebar');
                    }
                }
            });
        });

        function cerrarModal(id) {
            const modal = document.getElementById(id);
            if (modal) {
                if (id === 'modalCrearEmpleado') {
                    const nombreInput = modal.querySelector('input[name="Usuario.Nombre"]');
                    const correoInput = modal.querySelector('input[name="Usuario.Correo"]');
                    const numInput = modal.querySelector('input[name="Usuario.NumEmpleado"]');
                    const fechaInput = modal.querySelector('input[name="Usuario.FechaNacimiento"]');

                    if (nombreInput) nombreInput.value = '';
                    if (correoInput) correoInput.value = '';
                    if (numInput) numInput.value = '';
                    if (fechaInput) fechaInput.value = '';

                    const selectDepartamento = modal.querySelector('select[name="Usuario.IdDepartamento"]');
                    if (selectDepartamento) selectDepartamento.selectedIndex = 0;
                }

                modal.style.display = 'none';
                modal.classList.remove('active');
            }
        }

        function mostrarToast(mensaje, tipo) {
            document.querySelectorAll('.toast-msg').forEach(el => el.remove());

            const toast = document.createElement('div');
            toast.className = `toast-msg ${tipo}`;
            toast.innerHTML = `
                <span>${mensaje}</span>
                <button class="close-toast">&times;</button>
            `;

            document.body.appendChild(toast);

            setTimeout(() => {
                toast.style.transition = "opacity 0.5s ease-out";
                toast.style.opacity = 0;
                setTimeout(() => toast.remove(), 500);
            }, 3000);

            toast.querySelector('.close-toast').addEventListener('click', () => {
                toast.remove();
            });
        }
    </script>



</body>
</html>