@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Authorization

@{
    Layout = "_LayoutAdmin";
}

<div class="content">
    <aside class="sidebar">
        <a id="apartado-minutas" href="/Admin/Home">Minutas</a>

        @if (User.IsInRole("administrador"))
        {
            <a id="apartado-empleados" href="/Admin/Empleado">Empleados</a>
            <a id="apartado-departamentos" href="/Admin/Departamento">Departamentos</a>
            <a id="apartado-configuracion" href="/Admin/Configuracion" class="material-icons">settings</a>
        }
        <a id="apartado-perfil" href="/Admin/Perfil">Perfil</a>
        <a id="apartado-sesion" href="#" onclick="cerrarSesion()">Cerrar Sesión</a>



    </aside>
    <main>
        <!-- <input type="button"  class="float-btn hover" value="Crear minuta">-->
        <div class="minutas-list">
            <div class="filtros">
                <div>
                    <button id="minutas-pendientes">Pendientes</button>
                    <button id="minutas-firmadas">Firmadas</button>
                    <button id="minutas-borradores">Borradores</button>
                </div>
                <button id="btnfiltros">Filter</button>
            </div>
            <div class="filtrar">
                <form>
                    <label>Departamento:</label>
                    @if (ViewBag.Rol == "administrador")
                    {
                        <select>
                            <option>Ninguno</option>
                            <option>Sistemas</option>
                            <option>Vinculación</option>
                            <option>Planeación</option>
                            <option>Administración</option>
                            <option>Industrial</option>
                            <option>Coordinación</option>
                        </select>
                    }
                    else
                    {
                        <input type="text" value="@ViewBag.Departamento" disabled />
                    }
                    <label>Empleados:</label>
                    @if(ViewBag.Rol=="administrador" || ViewBag.Rol=="jefe")
                    {
                        <select>
                            <option>Seleccionar</option>
                            <option>Oscar</option>
                            <option>Adriana</option>
                            <option>Ernestina</option>
                            <option>Hector</option>
                        </select>
                    }
                    else
                    {
                        <input type="text" value="Seleccionar" disabled />
                    }
                      

                    <label>Desde:</label>
                    <input type="date">

                    <label>Hasta:</label>
                    <input type="date">
                </form>
            </div>

            <div class="minutas">
                <div class="minuta">
                    <h3>DDSC-10052501</h3>
                    <div>
                        <p>Por medio del presente escrito, informam...</p>
                        <a><i class="material-icons">draw</i></a>
                        <a><i class="material-icons">delete</i></a>
                        <a><i class="material-icons">edit</i></a>
                    </div>
                </div>
              
            </div>
        </div>
        <template>
            <div class="minuta">
                <h3>asd</h3>
                <div>
                    <p>Se reúnen los abajo firmantes con el objetivo...</p>
                    <a><i class="material-icons">draw</i></a>
                    <a><i class="material-icons">delete</i></a>
                    <a><i class="material-icons">edit</i></a>
                </div>
            </div>
        </template>
        <!--cuando no se selecciona ninguna minuta-->
        <div class="minuta-content-inactive">
            <label>Seleccione una minuta</label>
        </div>

        <div class="minuta-content">
            <h1>DDSC-13052500</h1>

            <div>
                <p>
                    <b>Objetivo:</b>Se reúnen los abajo firmantes con el objetivo de definir y aprobar las fechas clave del calendario
                    académico para el año 2025, asegurando una adecuada planificación de actividades escolares.
                </p><br>
                <p>
                    <b>Desarrollo de la reunión:</b>Se aprueba el calendario académico con los ajustes discutidos. Las fechas establecidas serán
                    comunicadas oficialmente a la comunidad académica. Se programará una reunión de seguimiento en
                    caso de requerir modificaciones.
                </p><br>
                <p>
                    <b>Orden del día:</b>
                    <ul>
                        <li>Bienvenida y presentación del objetivo de la reunión</li>
                        <li>Revisión del calendario académico propuesto para 2025</li>
                        <li>Discusión sobre fechas clave (inicio y fin de clases, periodos de evaluación, vacaciones, etc.)</li>
                        <li>Propuestas y ajustes necesarios</li>
                        <li>Votación y aprobación del calendario</li>
                        <li>Conclusiones y cierre de la reunión</li>
                    </ul>
                </p><br>
                <p><b>Compromisos y tareas:</b> </p>
                <ul>
                    <li>Se ha logrado una planificación estructurada del calendario académico 2025.</li>
                    <li>
                        Las fechas clave han sido definidas considerando la viabilidad y necesidades de la institución,
                        se espera que la implementación del calendario facilite una mejor organización de las actividades
                        escolares.
                    </li>
                </ul><br>

                <p><b>Lista de asistentes:</b></p>
                <table id="firmas">
                    <thead>
                        <tr>
                            <th>Nombre</th>
                            <th>Firma</th>
                            <th>Nombre</th>
                            <th>Firma</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr style="display:none">
                            <td>Juana Maria si</td>
                            <td>Juanita544523234</td>
                            <td></td>
                            <td></td>
                        </tr>
                    </tbody>
                </table>
                <div class="buttons">
                    <input id="btnPendientes" type="button" value="Firmar">
                    <input id="btnFirmadas" type="button" value="Eliminar">
                    <input id="btnBorradores" type="button" value="Editar">
                </div>


            </div>
        </div>
        <div id="modalCrearMinuta" class="modal">
            <form id="miFormulario" action="/Admin/Minutas/Agregar" method="POST">
                <h3>Crear Minuta</h3>
                <label>Objetivo</label>
                <textarea id="objetivo" name="objetivo" placeholder="Escribir..."></textarea><br>
                <label>Desarrollo de la reunión</label>
                <textarea style="height:30vh" id="desarrollo" name="desarrollo" placeholder="Escribir..."></textarea><br>
                <div>
                    <label>Orden del día</label>
                    <input id="orden" name="orden" type="text" placeholder="Escribir...">
                    <input class="material-icons" type="button" value="add">
                </div>
                <ul id="lstOrden">
                </ul>
               <!-- <label>Orden del dia</label>
                 <textarea id="orden" name="orden" placeholder="Escribir..."></textarea><br>-->
                @* <textarea id="compromisos" name="compromisos" placeholder="Escribir..."></textarea><br> *@
                <div>
                    <label>Compromisos y tareas</label>
                    <input id="compromisos" name="compromisos" type="text" placeholder="Escribir...">
                    <input id="btnUsuarios" class="material-icons" type="button" value="add">
                </div>
                <ul id="lstCompromisos">

                </ul>
                <div>
                    <label>Lista de asistentes</label>
                    <input id="inUsuarios" type="text" placeholder="Buscar...">
                    <input id="btnUsuarios" class="material-icons" type="button" value="search">
                </div>
                <ul id="lstUsrs">
                </ul>
                <label>Privada<input id="privada" type="checkbox" name="privada"></label>
                <div id="opciones">
                    <input id="ia" class="material-symbols-outlined" type="button" title="IA" value="wand_stars">
                    <input class="buttons" type="button" value="Cancelar">
                    <input class="buttons" type="submit" value="Confirmar">
                </div>
            </form>
        </div>

        <!--editar minuta-->
        <div id="modalEditarMinuta" class="modal">
            <form>
                <h3>Editar Minuta</h3>
                <label>Objetivo</label>
                <textarea placeholder="Escribir..."></textarea><br>
                <label>Desarrollo de la reunión</label>
                <textarea style="height:30vh" id="desarrollo" name="desarrollo" placeholder="Escribir..."></textarea><br>
                <div>
                    <label>Orden del día</label>
                    <input id="orden" type="text" placeholder="Escribir...">
                    <input id="btnOrden" class="material-icons" type="button" value="add">
                </div>
                <ul id="lstOrden">
                    <li>Lorem Ipsum is simply dummy text of the printing and typesetting <button>X</button></li>

                    <li>Lorem Ipsum is simply dummy text of the printing and typesetting <button>X</button></li>
                    <li>Lorem Ipsum is simply dummy text of the printing and typesetting <button>X</button></li>
                    <li>Lorem Ipsum is simply dummy text of the printing and typesetting <button>X</button></li>
                </ul>

                <div>
                    <label>Compromisos y tareas</label>
                    <input id ="compromisos" type="text" placeholder="Escribir...">
                    <input id="btnCompromisos" class="material-icons" type="button" value="add">
                </div>
                <ul id="lstCompromisos">
                </ul>

                <div>
                    <label>Lista de asistentes</label>
                    <input id="inUsuarios" type="text" placeholder="Buscar...">
                    <input id="btnUsuarios" class="material-icons" type="button" value="search">
                </div>
                <ul id="lstUsrs">
                    <li>Sandra <button>X</button></li>
                    <li>Eliza <button>X</button></li>
                    <li>Jose <button>X</button></li>
                </ul>
                <div id="opciones">
                    <label>Privada<input id="privada" type="checkbox" name="privada"></label>
                    <input id="ia" class="material-symbols-outlined" type="button" title="IA" value="wand_stars">
                    <input class="buttons" type="button" value="Cancelar">
                    <input class="buttons" type="button" value="Confirmar">
                </div>
            </form>
        </div>

        <!--Eliminar minuta-->
        <div id="modalEliminarMinuta" class="modal">
            <form class="botonesForm">
                <label>¿Desea eliminar esta Minuta?</label><br>
                <input type="button" value="Si">
                <input type="button" value="No">
            </form>
        </div>
         <!--IA modal-->
            <div id="modalIAMinuta" class="modal">
                <form>
                <span style="background: linear-gradient(to right, #1D5371,#185C53); width: 100%;display: grid;">
                    <input style="grid-column: 10; width: 3vw; color: white; margin: 10px -30px 0 0; background-color: #185C53;border-radius: 0; cursor: pointer;" class="material-symbols-outlined buttons" type="button" value="close">
                    <h2 style="grid-column: 7; color: white; line-height: 70px; grid-row: 1;">Mejorado con IA</h2>
                </span>
                    <div>
                        <label>Orden del día</label>
                        <input type="button" class="material-icons" value="autorenew">
                        <textarea placeholder="Escribir...">
                        Lorem Ipsum is simply dummy text of the printing and typesetting industry.
                        Lorem Ipsum has been the industry's standard Lorem Ipsum is simply dummy 
                        text of the printing and typesetting industry.
                    </textarea><br>

                    </div>
                    <div>
                        <label>Compromisos y tareas</label>
                        <input type="button" class="material-icons" value="autorenew">
                        <textarea>
                        Lorem Ipsum is simply dummy text of the printing and typesetting industry.
                        Lorem Ipsum has been the industry's standard Lorem Ipsum is simply dummy 
                        text of the printing and typesetting industry.
                    </textarea>
                    </div><br>
                    <div class="buttons">
                        <input type="button" value="Guardar">
                    </div>
                </form>
            </div>
    </main>

</div>
<script>
    // Cambiar el color del icono de la bar
    
    async function CargarMinutas(state){
        const modCrearMin = document.querySelector("#modalCrearMinuta");
        const minutasList = document.querySelector(".minutas");
            minutasList.replaceChildren();

        const response = await fetch('/Minutas/'+state);

		if(!response.ok){
			return; 
		}
		const minutas =await response.json();

		for (const minuta of minutas) {
			const template = document.querySelector("template");
			const clone = template.content.cloneNode(true);
			const h3 = clone.querySelector("h3");
			const p = clone.querySelector("p");
			h3.textContent = minuta.titulo;
            console.log(JSON.parse(minuta.contenido));
			p.textContent =  JSON.parse(minuta.contenido).Orden;

			
			minutasList.appendChild(clone);
		}
         modCrearMin.classList.remove("active");
         actualizarIconos(0);

	}

	window.addEventListener('load', function() {
       
    });



               const min = document.querySelector(".minutas");
            const menu = document.querySelector('.menu');
            const sidebar = document.querySelector('.sidebar');
            const header =document.querySelector("header");


            const desactivar = document.querySelector(".minuta-content-inactive");
            const activar = document.querySelector(".minuta-content");

            min.addEventListener("click", function(e){
            const clickedMinuta = e.target.closest(".minuta");
            if (clickedMinuta) {
                desactivar.style.display="none";
                activar.style.display="block";
            }
        });
            // modales
            const modCrearMin = document.querySelector("#modalCrearMinuta");
            const modEditarMin = document.querySelector("#modalEditarMinuta")
            const modElimMin = document.querySelector("#modalEliminarMinuta");
            const modFirmMin = document.querySelector("#btnPendientes");

            modFirmMin.addEventListener("click", function(){
                document.querySelector("#firmas tr").style.display = "block";
            });

            document.querySelector("#crearMinutaBtn").addEventListener("click", function () {
                console.log("ss");
                modCrearMin.classList.toggle("active");
            });

           modCrearMin.addEventListener("click", function (e) {
                if (e.target.tagName === "INPUT" && (e.target.value === "Cancelar")) {
      formulario.reset(); // Opcional: reiniciar el formulario después de enviar

                   modCrearMin.classList.remove("active");
               }
            });


            const lstUsuarios=document.getElementById("lstUsrs");
            let listaAsistentes=[];
			const inUsuarios=document.getElementById("inUsuarios");
			document.getElementById("btnUsuarios").addEventListener("click",function(){
				if(inUsuarios.value.trim() !== ""){
					listaAsistentes.push(inUsuarios.value.trim());
				};
                let li = document.createElement("li");
                li.textContent=inUsuarios.value.trim();

                /*se agrego para q tuviera un icono de eliminar :D */
                let btnEliminar = document.createElement("button");
                btnEliminar.textContent = "X";
                btnEliminar.addEventListener("click", function () {
                    li.remove();
                });
                li.appendChild(btnEliminar);

                lstUsuarios.append(li);
            });


            const formulario = document.getElementById('miFormulario');


    formulario.addEventListener('submit', function (event) {
      event.preventDefault();

      const formData = new FormData(formulario);

      // Validación robusta
   
      console.log(document.getElementById("objetivo").value);
      const contenido = {
        Objetivo: document.getElementById("objetivo").value,
        Desarrollo: document.getElementById("desarrollo").value,
        Orden: document.getElementById("orden").value,
        Compromisos: document.getElementById("compromisos").value
      };
      console.log(contenido);
      const dataFinal = new FormData();
      dataFinal.append('Contenido', JSON.stringify(contenido));

      const checkboxPrivada = document.getElementById("privada");
      dataFinal.append('Privada', checkboxPrivada?.checked ? 1 : 0);
      dataFinal.append('Asistentes',JSON.stringify(listaAsistentes));

      fetch(formulario.action, {
        method: formulario.method,
        body: dataFinal
      })
      .then(response => {
        if (!response.ok) throw new Error('Error en la respuesta del servidor');
        return response.text();
      })
      .then(data => {
        console.log('Respuesta:', data);
        alert('Minuta enviada correctamente.');
        formulario.reset();
      })
      .catch(error => {
        console.error('Error:', error);
        //alert('Error al enviar la minuta.');
        formulario.reset();
        

      });
      CargarMinutas()
      location.reload();
    });







            modEditarMin.addEventListener("click", function (e) {
                if (e.target.tagName === "INPUT" && (e.target.value === "Cancelar" || e.target.value === "Confirmar")) {
                    modEditarMin.style.display="none";
                }
            });

            // abrir menu de IA
            let ia = document.querySelector("#modalIAMinuta");
            let buttons = document.querySelectorAll("#modalIAMinuta .buttons");

            document.querySelector("#ia").addEventListener("click",function(){
                ia.style.display = "block";
            });

            ia.addEventListener("click", function(e) {
                if (e.target.tagName === "INPUT" && e.target.type === "button") {
                    ia.style.display = "none";
                }
            });

            //buscador
            const buscar = document.querySelector("#seccion input[type=search]");
            const rectangulo = document.querySelector("#rectangulo");

            document.querySelector("#buscar").addEventListener("click",function (){
            buscar.click();
            buscar.focus();
            header.classList.toggle("buscar");
            rectangulo.classList.toggle("visible");
            });

            document.addEventListener("click", function (e) {
            // Si el clic fue fuera del rectángulo y fuera del ícono de buscar
            if(!rectangulo.contains(e.target) && !document.querySelector("#buscar").contains(e.target)){
                rectangulo.classList.remove("visible");
                header.classList.remove("buscar");
                }
            });

            //Sidebar
            menu.addEventListener('click', () => {
                sidebar.classList.toggle('active');
            });

            const agregar = document.querySelector("#agregar");
            sidebar.addEventListener("click", function(e){
                if(e.target.tagName == "I"){
                    agregar.style.visibility="visible";
                }

            });

            //Filtros
            let lasActiveCategory = null;
            const categorias=document.querySelector('.filtros div');
            categorias.addEventListener('click',(e)=>{
                if(lasActiveCategory){
                    lasActiveCategory.classList.remove('active');
                }
                lasActiveCategory=e.target;
                e.target.classList.toggle('active');
            });

            //CambioEnMovilDeminuta
            const Lista=document.querySelector('.minutas-list');
            const minutasContent=document.querySelector('.minuta-content');
            const minutas=document.querySelector('.minutas');

            minutas.addEventListener('click',(e)=>{
                if(!e.target.classList.contains('filtros') && !e.target.parentElement.parentElement.classList.contains('filtros')  && !e.target.parentElement.classList.contains('filtros')){

                    minutasContent.classList.toggle('active');
                    console.log(e.target.parentElement.classList.contains('filtros'));
                    Lista.classList.toggle('inactive');

                    console.log(e.target);
                    

                }
            });




            history.pushState(null, "", location.href);

            window.addEventListener("popstate", function () {
                Lista.classList.toggle('inactive');
            console.log("Intento de salir con botón de retroceso");
            history.pushState(null, "", location.href); // Reagrega el estado para evitar la salida
            });



            document.addEventListener("click", function (event) { 
                if (!sidebar.contains(event.target ) && !menu.contains(event.target)) {
                    if (sidebar.classList.contains('active')) {
                        sidebar.classList.remove('active');
                console.log('click en sidebar');
                    }
                }
            });



            // mostrar iconos segun la categoria
            const pendientes = document.querySelector("#minutas-pendientes");
            const firmadas = document.querySelector("#minutas-firmadas");
            const borradores = document.querySelector("#minutas-borradores");

            const btnPendientes = document.querySelector("#btnPendientes");
            const btnFirmadas = document.querySelector("#btnFirmadas");
            const btnBorradores = document.querySelector("#btnBorradores");

            // editar minuta
            btnBorradores.addEventListener("click", function(){
                document.querySelector("#modalEditarMinuta").style.display="block";
            });
            // eliminar min
            btnFirmadas.addEventListener("click", function(){
                document.querySelector("#modalEliminarMinuta").style.display="block";
            });

            modElimMin.addEventListener("click", function(e) {
                if (e.target.tagName === "INPUT" && e.target.type === "button") {
                    modElimMin.style.display = "none";
                }
            });


            document.addEventListener("DOMContentLoaded", function () {
                pendientes.click();
            });
            pendientes.addEventListener("click", function () {
                 CargarMinutas("PorFirmar");
                actualizarIconos(0);
                btnPendientes.style.display = "block";
                btnBorradores.style.display = "none";
                btnFirmadas.style.display = "none";
            });
            firmadas.addEventListener("click", function () {
                 CargarMinutas("Firmada");
                actualizarIconos(1);
                btnFirmadas.style.display = "block";
                btnBorradores.style.display = "none";
                btnPendientes.style.display = "none";
            });
            borradores.addEventListener("click", function () {
                 CargarMinutas("Borrador");
                actualizarIconos(2);
                btnBorradores.style.display = "block";
                btnFirmadas.style.display = "none";
                btnPendientes.style.display = "none";
            });
    //hola Karlaa
            function actualizarIconos(activo){
                document.querySelectorAll(".minuta").forEach(minuta => {
                    let icons = minuta.querySelectorAll("a");

                    icons.forEach((icon, index) => {
                        if (index === activo) {
                            icon.classList.add("active");
                            icon.style.opacity = "1";
                            icon.style.pointerEvents = "auto";
                        } else {
                            icon.classList.remove("active");
                            icon.style.opacity = "0";
                            icon.style.pointerEvents = "none";
                        }
                    });
                });
            }
            document.getElementById("btnfiltros").addEventListener("click", function (e) {
                const filtrar = document.querySelector(".filtrar");
                e.target.classList.toggle("active");
                filtrar.classList.toggle("active");
            });


                function cerrarSesion() {
        // Crea dinámicamente un formulario para enviar POST a /Account/Logout
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = '/Account/Logout';

        // Agrega token antifalsificación
        const token = document.querySelector('meta[name="RequestVerificationToken"]')?.content;
        if (token) {
            const input = document.createElement('input');
            input.type = 'hidden';
            input.name = '__RequestVerificationToken';
            input.value = token;
            form.appendChild(input);
        }

        document.body.appendChild(form);
        form.submit();
    }

</script>

