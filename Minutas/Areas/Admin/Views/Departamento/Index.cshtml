@model IEnumerable<MinutasManage.Models.Departamento>
@Html.AntiForgeryToken()

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Departamentos</title>
    <link rel="stylesheet" href="~/Modifi/style.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
</head>
<body>
    <header>
        <div id="titulo">
            <button class="menu">
                <img id="imgMenu" src="~/Modifi/588a64e0d06f6719692a2d10.png" alt="">
            </button>
            <img src="~/Modifi/logotec (weld).png">
            <div>
                <h1>MINUTAS</h1>
                <p>Luis Carlos Esteban Longares Vidal</p>
            </div>
        </div>
        <div id="seccion">
            <input type="search" placeholder="Buscar...">
            <i id="buscar" class="material-icons">search</i>
            <i id="crearDeptoBtn" class="material-icons">category</i>
        </div>
    </header>

    <div class="content">
        <aside class="sidebar">
            <a href="/Admin/Home">Minutas</a>
            <a href="/Admin/Empleado">Empleados</a>
            <a href="/Admin/Departamento">Departamentos</a>
            <a href="/Admin/Configuracion">Configuracion</a>
            <a href="/Admin/Perfil">Perfil</a>
            <a id="apartado-sesion" href="/Admin/login.html">Cerrar Sesión</a>
        </aside>

        <main>
            @if (TempData["ErrorAgregar"] != null)
            {
                <script>
                    window.errorAlAgregar = true;
                    document.addEventListener('DOMContentLoaded', function () {
                        mostrarToast('@TempData["ErrorAgregar"]', 'error');
                        document.getElementById("modalCrearDepto").style.display = "block";
                    });
                </script>
            }


            @if (TempData["SuccessAgregar"] != null)
            {
                <script>
                    document.addEventListener('DOMContentLoaded', function() {
                        mostrarToast('@TempData["SuccessAgregar"]', 'success');
                    });
                </script>
            }
            @if (TempData["ErrorEditar"] != null)
            {
                <script>
                    document.addEventListener('DOMContentLoaded', function() {
                        mostrarToast('@TempData["ErrorEditar"]', 'error');
                        document.getElementById("modalEditarDepto").style.display = "block";
                    });
                </script>
            }
            @if (TempData["SuccessEditar"] != null)
            {
                <script>
                    document.addEventListener('DOMContentLoaded', function() {
                        mostrarToast('@TempData["SuccessEditar"]', 'success');
                    });
                </script>
            }
           

            <table id="tablaDepto">
                <tr>
                    <th>Departamento</th>
                    <th>Jefe</th>
                    <th>Departamento Superior</th>
                    <th></th>
                    <th></th>
                </tr>
                @foreach (var dep in Model)
                {
                    <tr>
                        <td>@dep.Nombre</td>
                        <td>@dep.IdJefeNavigation?.Nombre</td>
                        <td>@dep.IdDeptSuperiorNavigation?.Nombre</td>
                        <td class="eliminarDep" data-id="@dep.Id" data-nombre="@dep.Nombre">🗑</td>
                        <td class="editarDep" data-id="@dep.Id">🖉</td>
                    </tr>
                }
            </table>

            <!-- Modal Crear -->
            <div class="modal" id="modalCrearDepto">
                <form method="post" action="/Admin/Departamento/Agregar">
                    <h3>Crear Departamento</h3>

                    <label>Nombre</label>
                    <input name="Departamento.Nombre" type="text" required
                           value="@TempData["DepNombre"]" />

                    <label>Jefe de Departamento</label>
                    <select name="Departamento.IdJefe" required>
                        <option disabled @(TempData["DepJefe"] == null ? "selected" : "")>Selecciona una opción</option>
                        @foreach (var jefe in ViewBag.Empleados)
                        {
                            var selected = TempData["DepJefe"]?.ToString() == jefe.Id.ToString() ? "selected" : "";
                            <option value="@jefe.Id" @selected>@jefe.Nombre</option>
                        }
                    </select>

                    <label>Departamento Superior</label>
                    <select name="Departamento.IdDeptSuperior">
                        <option value="" @(TempData["DepSup"] == null ? "selected" : "")>Ninguno</option>
                        @foreach (var sup in ViewBag.Departamentos)
                        {
                            var selected = TempData["DepSup"]?.ToString() == sup.Id.ToString() ? "selected" : "";
                            <option value="@sup.Id" @selected>@sup.Nombre</option>
                        }
                    </select>

                    <div class="buttons">
                        <input type="button" value="Cancelar" onclick="cerrarModal('modalCrearDepto')">
                        <input type="button" value="Confirmar" onclick="this.form.submit();">
                    </div>
                </form>
            </div>

            <!-- Modal Editar -->
            <div class="modal" id="modalEditarDepto">
                <form method="post" action="/Admin/Departamento/Editar">
                    <h3>Editar Departamento</h3>

                    <input type="hidden" name="Departamento.Id" id="edit-id" />

                    <label>Nombre</label>
                    <input name="Departamento.Nombre" id="edit-nombre" type="text" required /><br>

                    <label>Jefe de Departamento</label>
                    <select name="Departamento.IdJefe" id="edit-jefe">
                        <option value="">Selecciona una opción</option>
                        @foreach (var jefe in ViewBag.Empleados)
                        {
                            <option value="@jefe.Id">@jefe.Nombre</option>
                        }
                    </select><br>

                    <label>Departamento Superior</label>
                    <select name="Departamento.IdDeptSuperior" id="edit-sup">
                        <option value="">Seleccione una opción</option>
                        @foreach (var sup in ViewBag.Departamentos)
                        {
                            <option value="@sup.Id">@sup.Nombre</option>
                        }
                    </select><br>

                    <div class="buttons">
                        <input type="button" value="Cancelar" onclick="cerrarModal('modalEditarDepto')">
                        <input type="button" value="Confirmar" onclick="this.form.submit();">
                    </div>
                </form>
            </div>

        </main>
    </div>

    <script>
        const menu = document.querySelector('button');
        const sidebar = document.querySelector('.sidebar');
        const header = document.querySelector("header");

        menu.addEventListener('click', () => sidebar.classList.toggle('active'));

        document.querySelector("#crearDeptoBtn").addEventListener("click", () => {
            document.getElementById("modalCrearDepto").style.display = "block";
        });

           document.querySelectorAll('.eliminarDep').forEach(btn => {
    btn.addEventListener('click', () => {
        const id = btn.dataset.id;
        const nombre = btn.dataset.nombre;
        
        if (confirm(`¿Deseas eliminar el departamento ${nombre}?`)) {
            fetch(`/Admin/Departamento/EliminarConfirmado/${id}`, {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            })
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    if (data.showToast) {
                        mostrarToast(data.message, 'success');
                    }
                    setTimeout(() => location.reload(), 1500);
                } else {
                    if (data.showToast) {
                        mostrarToast(data.message, 'error');
                    }
                }
            })
            .catch(error => {
                mostrarToast('Error en la comunicación con el servidor', 'error');
                console.error('Error:', error);
            });
        }
    });
});

        function mostrarToast(mensaje, tipo) {
    // Eliminar toasts anteriores
    document.querySelectorAll('.toast-msg').forEach(el => el.remove());

    const toast = document.createElement('div');
    toast.className = `toast-msg ${tipo}`;
    toast.innerHTML = `
        <span>${mensaje}</span>
        <button class="close-toast">&times;</button>
    `;

    // 👇 ¡Clave! Insertarlo en el BODY para que el "top" funcione correctamente
    document.body.appendChild(toast);

    // Cierre automático
    setTimeout(() => {
        toast.style.transition = "opacity 0.5s ease-out";
        toast.style.opacity = 0;
        setTimeout(() => toast.remove(), 500);
    }, 3000);

    // Cierre manual
    toast.querySelector('.close-toast').addEventListener('click', () => {
        toast.remove();
    });
}


        


        document.querySelectorAll('.editarDep').forEach(btn => {
            btn.addEventListener('click', () => {
                const id = btn.dataset.id;
                fetch(`/Admin/Departamento/Editar/${id}`)
                    .then(res => res.json())
                    .then(data => {
                        document.getElementById("edit-id").value = data.id;
                        document.getElementById("edit-nombre").value = data.nombre;
                        document.getElementById("edit-jefe").value = data.idJefe;
                        document.getElementById("edit-sup").value = data.idDeptSuperior || "";

                        const modal = document.getElementById("modalEditarDepto");
                        modal.style.display = "block";
                        modal.classList.add("active");
                    });
            });
        });
                function cerrarModal(id) {
            const modal = document.getElementById(id);
            if (modal) {
                if (id === 'modalCrearDepto') {
                  
                    const nombreInput = modal.querySelector('input[name="Departamento.Nombre"]');
                    if (nombreInput) nombreInput.value = '';

               
                    const selectJefe = modal.querySelector('select[name="Departamento.IdJefe"]');
                    if (selectJefe) selectJefe.selectedIndex = 0;

                    const selectSuperior = modal.querySelector('select[name="Departamento.IdDeptSuperior"]');
                    if (selectSuperior) selectSuperior.selectedIndex = 0;
                }

                modal.style.display = 'none';
                modal.classList.remove('active');
            }
        }

        // Cierre de toasts
        document.querySelectorAll('.close-toast').forEach(btn => {
            btn.addEventListener('click', () => btn.parentElement.remove());
        });

        setTimeout(() => {
            const toast = document.querySelector('.toast-msg');
            if (toast) {
                toast.style.transition = "opacity 0.5s ease-out";
                toast.style.opacity = 0;
                setTimeout(() => toast.remove(), 500);
            }
        }, 3000);
    </script>
</body>
</html>




@* @{
    Layout = "_LayoutAdmin";

    </header>

<div class="content">
    <aside class="sidebar">
        <a id="apartado-minutas" href="/Admin/Minutas">Minutas</a>
        <a id="apartado-empleados" href="/Admin/Empleado">Empleados</a>
        <a id="apartado-departamentos" href="/Admin/Departamento">Departamentos</a>
        <a id="apartado-configuracion" href="#">Configuración</a>
        <a id="apartado-perfil" href="#">Perfil</a>
    </aside>

    <main>
        <button id="crearDeptoBtn">+ Crear Departamento</button>

        <table id="tablaDepto">
            <thead>
                <tr>
                    <th>Departamento</th>
                    <th>Jefe</th>
                    <th>Departamento Superior</th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var dep in Model)
                {
                    <tr data-id="@dep.Id"
                        data-nombre="@dep.Nombre"
                        data-jefe="@dep.IdJefe?.ToString()"
                        data-superior="@dep.IdDeptSuperior?.ToString()">
                        <td>@dep.Nombre</td>
                        <td>@dep.IdJefe</td>
                        <td>@dep.IdDeptSuperior</td>
                        <td class="eliminarDep">🗑</td>
                        <td class="editarDep">🖉</td>
                    </tr>
                }
            </tbody>
        </table>

        <!-- Modal Crear -->
        <div class="modal" id="modalCrearDepto" style="display:none;">
            <form id="formCrear">
                <h3>Crear Departamento</h3>
                <label>Nombre</label>
                <input type="text" name="Nombre"><br>
                <label>Jefe de Departamento</label>
                <select name="IdJefe">
                    @foreach (var jefe in ViewBag.Empleados)
                    {
                        <option value="@jefe.Id">@jefe.Nombre</option>
                    }
                </select><br>
                <label>Departamento Superior</label>
                <select name="IdDeptSuperior">
                    @foreach (var superior in ViewBag.Departamentos)
                    {
                        <option value="@superior.Id">@superior.Nombre</option>
                    }
                </select><br>
                <div class="buttons">
                    <input type="submit" value="Confirmar">
                    <input type="button" value="Cancelar" onclick="cerrarModal('modalCrearDepto')">
                </div>
            </form>
        </div>

        <!-- Modal Editar -->
        <div class="modal" id="modalEditarDepto" style="display:none;">
            <form id="formEditar">
                <input type="hidden" name="Id">
                <h3>Editar Departamento</h3>
                <label>Nombre</label>
                <input type="text" name="Nombre"><br>
                <label>Jefe de Departamento</label>
                <select name="IdJefe">
                    @foreach (var jefe in ViewBag.Empleados)
                    {
                        <option value="@jefe.Id">@jefe.Nombre</option>
                    }
                </select><br>
                <label>Departamento Superior</label>
                <select name="IdDeptSuperior">
                    @foreach (var superior in ViewBag.Departamentos)
                    {
                        <option value="@superior.Id">@superior.Nombre</option>
                    }
                </select><br>
                <div class="buttons">
                    <input type="submit" value="Confirmar">
                    <input type="button" value="Cancelar" onclick="cerrarModal('modalEditarDepto')">
                </div>
            </form>
        </div>

        <!-- Modal Eliminar -->
        <div class="modal" id="modalEliminarDepto" style="display:none;">
            <div>
                <p>¿Desea dar de baja este departamento?</p>
                <button id="confirmarEliminar">Sí</button>
                <button onclick="cerrarModal('modalEliminarDepto')">No</button>
            </div>
        </div>
    </main>
</div>

<script>
    function cerrarModal(id) {
        document.getElementById(id).style.display = "none";
    }

    document.getElementById("crearDeptoBtn").addEventListener("click", function () {
        document.getElementById("modalCrearDepto").style.display = "block";
    });

    document.querySelectorAll(".editarDep").forEach(btn => {
        btn.addEventListener("click", function () {
            const row = btn.closest("tr");
            const modal = document.getElementById("modalEditarDepto");
            modal.querySelector("input[name='Id']").value = row.dataset.id;
            modal.querySelector("input[name='Nombre']").value = row.dataset.nombre;
            modal.querySelector("select[name='IdJefe']").value = row.dataset.jefe;
            modal.querySelector("select[name='IdDeptSuperior']").value = row.dataset.superior;
            modal.style.display = "block";
        });
    });

    let idAEliminar = null;
    document.querySelectorAll(".eliminarDep").forEach(btn => {
        btn.addEventListener("click", function () {
            idAEliminar = btn.closest("tr").dataset.id;
            document.getElementById("modalEliminarDepto").style.display = "block";
        });
    });

    document.getElementById("confirmarEliminar").addEventListener("click", function () {
        fetch(`/Admin/Departamento/EliminarConfirmado/${idAEliminar}`, {
            method: "POST"
        }).then(response => {
            if (response.ok) location.reload();
        });
    });

    // Formulario de creación
    document.getElementById("formCrear").addEventListener("submit", function (e) {
        e.preventDefault();
        const formData = new FormData(this);
        fetch("/Admin/Departamento/Agregar", {
            method: "POST",
            body: new URLSearchParams(formData)
        }).then(response => {
            if (response.ok) location.reload();
        });
    });

    // Formulario de edición
    document.getElementById("formEditar").addEventListener("submit", function (e) {
        e.preventDefault();
        const formData = new FormData(this);
        fetch("/Admin/Departamento/Editar", {
            method: "POST",
            body: new URLSearchParams(formData)
        }).then(response => {
            if (response.ok) location.reload();
        });
    });
</script>


 *@


